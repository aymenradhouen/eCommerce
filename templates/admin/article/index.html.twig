{% extends 'baseAdmin.html.twig' %}

{% block title %}Article index{% endblock %}

{% block body %}
    <h1>Article index</h1>
    <label>Search name:<input type="search" onkeyup="myFunction()" name="searchtable" id="searchtable" class="form-control form-control-sm search" placeholder="" aria-controls="dataTable"></label>
    <table class="table" id="dataTable">
        <thead>
            <tr>
                <th>Id</th>
                <th class="sorting" tabindex="0" onclick="sortTable()">Nom</th>
                <th>Prix</th>
                <th>Categorie</th>
                <th>Image</th>
                <th>Quantite</th>
                <th>Description</th>
                <th>CreatedAt</th>
                <th>User</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for article in articles %}
            <tr>
                <td>{{ article.id }}</td>
                <td>{{ article.nom }}</td>
                <td>{{ article.prix }}</td>
                <td>{{ article.categorie }}</td>
                <td><img src="/uploads/{{ article.image }}" alt="" width="30" height="30"></td>
                <td>{{ article.quantite }}</td>
                <td>{{ article.description }}</td>
                <td>{{ article.createdAt ? article.createdAt|date('Y-m-d H:i:s') : '' }}</td>
                <td>{{ article.userCreated }}</td>
                <td>
                    <a href="{{ path('article_show', {'id': article.id}) }}" class="btn btn-primary">show</a>
                    <a href="{{ path('article_edit', {'id': article.id}) }}" class="btn btn-primary">edit</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="9">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <a href="{{ path('article_new') }}" class="btn btn-primary">Create new</a>
    <div class="pagination active">
        {{ knp_pagination_render(articles) }}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        function myFunction() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchtable");
            filter = input.value.toUpperCase();
            table = document.getElementById("dataTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>

    <script>
        function sortTable() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("dataTable");
            switching = true;
            /* Make a loop that will continue until
            no switching has been done: */
            while (switching) {
                // Start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /* Loop through all table rows (except the
                first, which contains table headers): */
                for (i = 1; i < (rows.length - 1); i++) {
                    // Start by saying there should be no switching:
                    shouldSwitch = false;
                    /* Get the two elements you want to compare,
                    one from current row and one from the next: */
                    x = rows[i].getElementsByTagName("TD")[1];
                    y = rows[i + 1].getElementsByTagName("TD")[1];
                    // Check if the two rows should switch place:
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark that a switch has been done: */
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }
        }
    </script>
{% endblock %}
